include "global.tbh"

'--------------------------------------------------------------------
function baudrate_set(br_mode as br_modes) as ok_ng
'Set the UART according to the supplied baudrate "number"

select case br_mode
	case BR_1200:
		ser.baudrate= PL_SER_BAUD_1200
	case BR_2400:
		ser.baudrate= PL_SER_BAUD_2400
	case BR_4800:
		ser.baudrate= PL_SER_BAUD_4800
	case BR_9600:
		ser.baudrate= PL_SER_BAUD_9600
	case BR_19200:
		ser.baudrate= PL_SER_BAUD_19200
	case BR_38400:
		ser.baudrate= PL_SER_BAUD_38400
	case BR_57600:
		ser.baudrate= PL_SER_BAUD_57600
	case BR_115200:
		ser.baudrate= PL_SER_BAUD_115200
	case BR_300:
		ser.baudrate= PL_SER_BAUD_300
	case BR_230400:
		ser.baudrate= PL_SER_BAUD_230400
	case BR_460800:
		ser.baudrate= PL_SER_BAUD_460800
	case BR_921600:
		ser.baudrate= PL_SER_BAUD_921600
	case else
		baudrate_set=NG
		exit function
	end select

	baudrate_set=OK
end function

'--------------------------------------------------------------------
function baudrate_get() as br_modes

 
	
	select case ser.baudrate
	case PL_SER_BAUD_300:
		baudrate_get= BR_300
	case PL_SER_BAUD_1200:
		baudrate_get=BR_1200
	case PL_SER_BAUD_2400:
		baudrate_get=BR_2400
	case PL_SER_BAUD_4800:
		baudrate_get=BR_4800
	case PL_SER_BAUD_9600:
		baudrate_get=BR_9600
	case PL_SER_BAUD_19200:
		baudrate_get=BR_19200
	case PL_SER_BAUD_38400:
		baudrate_get=BR_38400
	case PL_SER_BAUD_57600:
		baudrate_get=BR_57600
	case PL_SER_BAUD_115200:
		baudrate_get=BR_115200
	case PL_SER_BAUD_230400:
		baudrate_get=BR_230400
	case PL_SER_BAUD_460800:
		baudrate_get=BR_460800
	case PL_SER_BAUD_921600:
		baudrate_get=BR_921600
	end select	 
	
end function


#if SIGNAL_STRENGTH_INDICATION=1 
sub signal_strength_indication_init()
	dim f as byte
	
	'make sure there is no reset
	io.num= PL_IO_NUM_6
	io.enabled=YES
	io.state=HIGH

	'we will be turning LEDs off
	io.num= PL_IO_NUM_7_RX1
	io.enabled=YES
	io.state=HIGH
	'make 5 clocks
	io.num= PL_IO_NUM_8_TX1
	io.enabled=YES
	for f=0 to 4
		io.state=LOW
		io.state=HIGH
	next f
end sub
#endif